package winkhouse.orm.auto;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.BaseDataObject;
import org.apache.cayenne.exp.Property;

import winkhouse.orm.Abbinamenti;
import winkhouse.orm.Affitti;
import winkhouse.orm.Affittiallegati;
import winkhouse.orm.Affittianagrafiche;
import winkhouse.orm.Affittirate;
import winkhouse.orm.Affittispese;
import winkhouse.orm.Agenti;
import winkhouse.orm.Agentiappuntamenti;
import winkhouse.orm.Allegaticolloquio;
import winkhouse.orm.Allegatiimmobili;
import winkhouse.orm.Anagrafiche;
import winkhouse.orm.Anagraficheappuntamenti;
import winkhouse.orm.Appuntamenti;
import winkhouse.orm.Attribute;
import winkhouse.orm.Attributevalue;
import winkhouse.orm.Classicliente;
import winkhouse.orm.Classienergetiche;
import winkhouse.orm.Colloqui;
import winkhouse.orm.Colloquiagenti;
import winkhouse.orm.Colloquianagrafiche;
import winkhouse.orm.Colloquicriteriricerca;
import winkhouse.orm.Contatti;
import winkhouse.orm.Daticatastali;
import winkhouse.orm.Entity;
import winkhouse.orm.Gcalendar;
import winkhouse.orm.Gdata;
import winkhouse.orm.Immagini;
import winkhouse.orm.Immobili;
import winkhouse.orm.Permessi;
import winkhouse.orm.Permessiui;
import winkhouse.orm.Promemoria;
import winkhouse.orm.Report;
import winkhouse.orm.Reportmarkers;
import winkhouse.orm.Ricerche;
import winkhouse.orm.Riscaldamenti;
import winkhouse.orm.Stanzeimmobili;
import winkhouse.orm.Statoconservativo;
import winkhouse.orm.Tipiappuntamenti;
import winkhouse.orm.Tipologiastanze;
import winkhouse.orm.Tipologiecolloqui;
import winkhouse.orm.Tipologiecontatti;
import winkhouse.orm.Tipologieimmobili;
import winkhouse.orm.Winkgcalendar;

/**
 * Class _Agenti was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Agenti extends BaseDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String CODAGENTE_PK_COLUMN = "CODAGENTE";

    public static final Property<String> CAP = Property.create("cap", String.class);
    public static final Property<String> CITTA = Property.create("citta", String.class);
    public static final Property<String> COGNOME = Property.create("cognome", String.class);
    public static final Property<LocalDateTime> DATEUPDATE = Property.create("dateupdate", LocalDateTime.class);
    public static final Property<String> INDIRIZZO = Property.create("indirizzo", String.class);
    public static final Property<Boolean> ISADMIN = Property.create("isadmin", Boolean.class);
    public static final Property<String> NOME = Property.create("nome", String.class);
    public static final Property<String> PASSWORD = Property.create("password", String.class);
    public static final Property<String> PROVINCIA = Property.create("provincia", String.class);
    public static final Property<String> USERNAME = Property.create("username", String.class);
    public static final Property<List<Abbinamenti>> ABBINAMENTIS = Property.create("abbinamentis", List.class);
    public static final Property<List<Affittiallegati>> AFFITTIALLEGATIS = Property.create("affittiallegatis", List.class);
    public static final Property<List<Affittianagrafiche>> AFFITTIANAGRAFICHES = Property.create("affittianagrafiches", List.class);
    public static final Property<List<Affittirate>> AFFITTIRATES = Property.create("affittirates", List.class);
    public static final Property<List<Affitti>> AFFITTIS = Property.create("affittis", List.class);
    public static final Property<List<Affitti>> AFFITTIS1 = Property.create("affittis1", List.class);
    public static final Property<List<Affittispese>> AFFITTISPESES = Property.create("affittispeses", List.class);
    public static final Property<Agenti> AGENTI = Property.create("agenti", Agenti.class);
    public static final Property<List<Agentiappuntamenti>> AGENTIAPPUNTAMENTIS = Property.create("agentiappuntamentis", List.class);
    public static final Property<List<Agentiappuntamenti>> AGENTIAPPUNTAMENTIS1 = Property.create("agentiappuntamentis1", List.class);
    public static final Property<List<Agenti>> AGENTIS = Property.create("agentis", List.class);
    public static final Property<List<Allegaticolloquio>> ALLEGATICOLLOQUIOS = Property.create("allegaticolloquios", List.class);
    public static final Property<List<Allegatiimmobili>> ALLEGATIIMMOBILIS = Property.create("allegatiimmobilis", List.class);
    public static final Property<List<Anagraficheappuntamenti>> ANAGRAFICHEAPPUNTAMENTIS = Property.create("anagraficheappuntamentis", List.class);
    public static final Property<List<Anagrafiche>> ANAGRAFICHES = Property.create("anagrafiches", List.class);
    public static final Property<List<Anagrafiche>> ANAGRAFICHES1 = Property.create("anagrafiches1", List.class);
    public static final Property<List<Appuntamenti>> APPUNTAMENTIS = Property.create("appuntamentis", List.class);
    public static final Property<List<Attribute>> ATTRIBUTES = Property.create("attributes", List.class);
    public static final Property<List<Attributevalue>> ATTRIBUTEVALUES = Property.create("attributevalues", List.class);
    public static final Property<List<Classicliente>> CLASSICLIENTES = Property.create("classiclientes", List.class);
    public static final Property<List<Classienergetiche>> CLASSIENERGETICHES = Property.create("classienergetiches", List.class);
    public static final Property<List<Colloquiagenti>> COLLOQUIAGENTIS = Property.create("colloquiagentis", List.class);
    public static final Property<List<Colloquiagenti>> COLLOQUIAGENTIS1 = Property.create("colloquiagentis1", List.class);
    public static final Property<List<Colloquianagrafiche>> COLLOQUIANAGRAFICHES = Property.create("colloquianagrafiches", List.class);
    public static final Property<List<Colloquicriteriricerca>> COLLOQUICRITERIRICERCAS = Property.create("colloquicriteriricercas", List.class);
    public static final Property<List<Colloqui>> COLLOQUIS = Property.create("colloquis", List.class);
    public static final Property<List<Colloqui>> COLLOQUIS1 = Property.create("colloquis1", List.class);
    public static final Property<List<Contatti>> CONTATTIS = Property.create("contattis", List.class);
    public static final Property<List<Contatti>> CONTATTIS1 = Property.create("contattis1", List.class);
    public static final Property<List<Daticatastali>> DATICATASTALIS = Property.create("daticatastalis", List.class);
    public static final Property<List<Entity>> ENTITIES = Property.create("entities", List.class);
    public static final Property<List<Gcalendar>> GCALENDARS = Property.create("gcalendars", List.class);
    public static final Property<List<Gdata>> GDATAS = Property.create("gdatas", List.class);
    public static final Property<List<Immagini>> IMMAGINIS = Property.create("immaginis", List.class);
    public static final Property<List<Immobili>> IMMOBILIS = Property.create("immobilis", List.class);
    public static final Property<List<Immobili>> IMMOBILIS1 = Property.create("immobilis1", List.class);
    public static final Property<List<Permessi>> PERMESSIS = Property.create("permessis", List.class);
    public static final Property<List<Permessi>> PERMESSIS1 = Property.create("permessis1", List.class);
    public static final Property<List<Permessiui>> PERMESSIUIS = Property.create("permessiuis", List.class);
    public static final Property<List<Permessiui>> PERMESSIUIS1 = Property.create("permessiuis1", List.class);
    public static final Property<List<Promemoria>> PROMEMORIAS = Property.create("promemorias", List.class);
    public static final Property<List<Promemoria>> PROMEMORIAS1 = Property.create("promemorias1", List.class);
    public static final Property<List<Reportmarkers>> REPORTMARKERSS = Property.create("reportmarkerss", List.class);
    public static final Property<List<Report>> REPORTS = Property.create("reports", List.class);
    public static final Property<List<Ricerche>> RICERCHES = Property.create("ricerches", List.class);
    public static final Property<List<Riscaldamenti>> RISCALDAMENTIS = Property.create("riscaldamentis", List.class);
    public static final Property<List<Stanzeimmobili>> STANZEIMMOBILIS = Property.create("stanzeimmobilis", List.class);
    public static final Property<List<Statoconservativo>> STATOCONSERVATIVOES = Property.create("statoconservativoes", List.class);
    public static final Property<List<Tipiappuntamenti>> TIPIAPPUNTAMENTIS = Property.create("tipiappuntamentis", List.class);
    public static final Property<List<Tipologiastanze>> TIPOLOGIASTANZES = Property.create("tipologiastanzes", List.class);
    public static final Property<List<Tipologiecolloqui>> TIPOLOGIECOLLOQUIS = Property.create("tipologiecolloquis", List.class);
    public static final Property<List<Tipologiecontatti>> TIPOLOGIECONTATTIS = Property.create("tipologiecontattis", List.class);
    public static final Property<List<Tipologieimmobili>> TIPOLOGIEIMMOBILIS = Property.create("tipologieimmobilis", List.class);
    public static final Property<List<Winkgcalendar>> WINKGCALENDARS = Property.create("winkgcalendars", List.class);

    protected String cap;
    protected String citta;
    protected String cognome;
    protected LocalDateTime dateupdate;
    protected String indirizzo;
    protected Boolean isadmin;
    protected String nome;
    protected String password;
    protected String provincia;
    protected String username;

    protected Object abbinamentis;
    protected Object affittiallegatis;
    protected Object affittianagrafiches;
    protected Object affittirates;
    protected Object affittis;
    protected Object affittis1;
    protected Object affittispeses;
    protected Object agenti;
    protected Object agentiappuntamentis;
    protected Object agentiappuntamentis1;
    protected Object agentis;
    protected Object allegaticolloquios;
    protected Object allegatiimmobilis;
    protected Object anagraficheappuntamentis;
    protected Object anagrafiches;
    protected Object anagrafiches1;
    protected Object appuntamentis;
    protected Object attributes;
    protected Object attributevalues;
    protected Object classiclientes;
    protected Object classienergetiches;
    protected Object colloquiagentis;
    protected Object colloquiagentis1;
    protected Object colloquianagrafiches;
    protected Object colloquicriteriricercas;
    protected Object colloquis;
    protected Object colloquis1;
    protected Object contattis;
    protected Object contattis1;
    protected Object daticatastalis;
    protected Object entities;
    protected Object gcalendars;
    protected Object gdatas;
    protected Object immaginis;
    protected Object immobilis;
    protected Object immobilis1;
    protected Object permessis;
    protected Object permessis1;
    protected Object permessiuis;
    protected Object permessiuis1;
    protected Object promemorias;
    protected Object promemorias1;
    protected Object reportmarkerss;
    protected Object reports;
    protected Object ricerches;
    protected Object riscaldamentis;
    protected Object stanzeimmobilis;
    protected Object statoconservativoes;
    protected Object tipiappuntamentis;
    protected Object tipologiastanzes;
    protected Object tipologiecolloquis;
    protected Object tipologiecontattis;
    protected Object tipologieimmobilis;
    protected Object winkgcalendars;

    public void setCap(String cap) {
        beforePropertyWrite("cap", this.cap, cap);
        this.cap = cap;
    }

    public String getCap() {
        beforePropertyRead("cap");
        return this.cap;
    }

    public void setCitta(String citta) {
        beforePropertyWrite("citta", this.citta, citta);
        this.citta = citta;
    }

    public String getCitta() {
        beforePropertyRead("citta");
        return this.citta;
    }

    public void setCognome(String cognome) {
        beforePropertyWrite("cognome", this.cognome, cognome);
        this.cognome = cognome;
    }

    public String getCognome() {
        beforePropertyRead("cognome");
        return this.cognome;
    }

    public void setDateupdate(LocalDateTime dateupdate) {
        beforePropertyWrite("dateupdate", this.dateupdate, dateupdate);
        this.dateupdate = dateupdate;
    }

    public LocalDateTime getDateupdate() {
        beforePropertyRead("dateupdate");
        return this.dateupdate;
    }

    public void setIndirizzo(String indirizzo) {
        beforePropertyWrite("indirizzo", this.indirizzo, indirizzo);
        this.indirizzo = indirizzo;
    }

    public String getIndirizzo() {
        beforePropertyRead("indirizzo");
        return this.indirizzo;
    }

    public void setIsadmin(boolean isadmin) {
        beforePropertyWrite("isadmin", this.isadmin, isadmin);
        this.isadmin = isadmin;
    }

	public boolean isIsadmin() {
        beforePropertyRead("isadmin");
        if(this.isadmin == null) {
            return false;
        }
        return this.isadmin;
    }

    public void setNome(String nome) {
        beforePropertyWrite("nome", this.nome, nome);
        this.nome = nome;
    }

    public String getNome() {
        beforePropertyRead("nome");
        return this.nome;
    }

    public void setPassword(String password) {
        beforePropertyWrite("password", this.password, password);
        this.password = password;
    }

    public String getPassword() {
        beforePropertyRead("password");
        return this.password;
    }

    public void setProvincia(String provincia) {
        beforePropertyWrite("provincia", this.provincia, provincia);
        this.provincia = provincia;
    }

    public String getProvincia() {
        beforePropertyRead("provincia");
        return this.provincia;
    }

    public void setUsername(String username) {
        beforePropertyWrite("username", this.username, username);
        this.username = username;
    }

    public String getUsername() {
        beforePropertyRead("username");
        return this.username;
    }

    public void addToAbbinamentis(Abbinamenti obj) {
        addToManyTarget("abbinamentis", obj, true);
    }

    public void removeFromAbbinamentis(Abbinamenti obj) {
        removeToManyTarget("abbinamentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Abbinamenti> getAbbinamentis() {
        return (List<Abbinamenti>)readProperty("abbinamentis");
    }

    public void addToAffittiallegatis(Affittiallegati obj) {
        addToManyTarget("affittiallegatis", obj, true);
    }

    public void removeFromAffittiallegatis(Affittiallegati obj) {
        removeToManyTarget("affittiallegatis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Affittiallegati> getAffittiallegatis() {
        return (List<Affittiallegati>)readProperty("affittiallegatis");
    }

    public void addToAffittianagrafiches(Affittianagrafiche obj) {
        addToManyTarget("affittianagrafiches", obj, true);
    }

    public void removeFromAffittianagrafiches(Affittianagrafiche obj) {
        removeToManyTarget("affittianagrafiches", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Affittianagrafiche> getAffittianagrafiches() {
        return (List<Affittianagrafiche>)readProperty("affittianagrafiches");
    }

    public void addToAffittirates(Affittirate obj) {
        addToManyTarget("affittirates", obj, true);
    }

    public void removeFromAffittirates(Affittirate obj) {
        removeToManyTarget("affittirates", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Affittirate> getAffittirates() {
        return (List<Affittirate>)readProperty("affittirates");
    }

    public void addToAffittis(Affitti obj) {
        addToManyTarget("affittis", obj, true);
    }

    public void removeFromAffittis(Affitti obj) {
        removeToManyTarget("affittis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Affitti> getAffittis() {
        return (List<Affitti>)readProperty("affittis");
    }

    public void addToAffittis1(Affitti obj) {
        addToManyTarget("affittis1", obj, true);
    }

    public void removeFromAffittis1(Affitti obj) {
        removeToManyTarget("affittis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Affitti> getAffittis1() {
        return (List<Affitti>)readProperty("affittis1");
    }

    public void addToAffittispeses(Affittispese obj) {
        addToManyTarget("affittispeses", obj, true);
    }

    public void removeFromAffittispeses(Affittispese obj) {
        removeToManyTarget("affittispeses", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Affittispese> getAffittispeses() {
        return (List<Affittispese>)readProperty("affittispeses");
    }

    public void setAgenti(Agenti agenti) {
        setToOneTarget("agenti", agenti, true);
    }

    public Agenti getAgenti() {
        return (Agenti)readProperty("agenti");
    }

    public void addToAgentiappuntamentis(Agentiappuntamenti obj) {
        addToManyTarget("agentiappuntamentis", obj, true);
    }

    public void removeFromAgentiappuntamentis(Agentiappuntamenti obj) {
        removeToManyTarget("agentiappuntamentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Agentiappuntamenti> getAgentiappuntamentis() {
        return (List<Agentiappuntamenti>)readProperty("agentiappuntamentis");
    }

    public void addToAgentiappuntamentis1(Agentiappuntamenti obj) {
        addToManyTarget("agentiappuntamentis1", obj, true);
    }

    public void removeFromAgentiappuntamentis1(Agentiappuntamenti obj) {
        removeToManyTarget("agentiappuntamentis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Agentiappuntamenti> getAgentiappuntamentis1() {
        return (List<Agentiappuntamenti>)readProperty("agentiappuntamentis1");
    }

    public void addToAgentis(Agenti obj) {
        addToManyTarget("agentis", obj, true);
    }

    public void removeFromAgentis(Agenti obj) {
        removeToManyTarget("agentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Agenti> getAgentis() {
        return (List<Agenti>)readProperty("agentis");
    }

    public void addToAllegaticolloquios(Allegaticolloquio obj) {
        addToManyTarget("allegaticolloquios", obj, true);
    }

    public void removeFromAllegaticolloquios(Allegaticolloquio obj) {
        removeToManyTarget("allegaticolloquios", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Allegaticolloquio> getAllegaticolloquios() {
        return (List<Allegaticolloquio>)readProperty("allegaticolloquios");
    }

    public void addToAllegatiimmobilis(Allegatiimmobili obj) {
        addToManyTarget("allegatiimmobilis", obj, true);
    }

    public void removeFromAllegatiimmobilis(Allegatiimmobili obj) {
        removeToManyTarget("allegatiimmobilis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Allegatiimmobili> getAllegatiimmobilis() {
        return (List<Allegatiimmobili>)readProperty("allegatiimmobilis");
    }

    public void addToAnagraficheappuntamentis(Anagraficheappuntamenti obj) {
        addToManyTarget("anagraficheappuntamentis", obj, true);
    }

    public void removeFromAnagraficheappuntamentis(Anagraficheappuntamenti obj) {
        removeToManyTarget("anagraficheappuntamentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Anagraficheappuntamenti> getAnagraficheappuntamentis() {
        return (List<Anagraficheappuntamenti>)readProperty("anagraficheappuntamentis");
    }

    public void addToAnagrafiches(Anagrafiche obj) {
        addToManyTarget("anagrafiches", obj, true);
    }

    public void removeFromAnagrafiches(Anagrafiche obj) {
        removeToManyTarget("anagrafiches", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Anagrafiche> getAnagrafiches() {
        return (List<Anagrafiche>)readProperty("anagrafiches");
    }

    public void addToAnagrafiches1(Anagrafiche obj) {
        addToManyTarget("anagrafiches1", obj, true);
    }

    public void removeFromAnagrafiches1(Anagrafiche obj) {
        removeToManyTarget("anagrafiches1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Anagrafiche> getAnagrafiches1() {
        return (List<Anagrafiche>)readProperty("anagrafiches1");
    }

    public void addToAppuntamentis(Appuntamenti obj) {
        addToManyTarget("appuntamentis", obj, true);
    }

    public void removeFromAppuntamentis(Appuntamenti obj) {
        removeToManyTarget("appuntamentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Appuntamenti> getAppuntamentis() {
        return (List<Appuntamenti>)readProperty("appuntamentis");
    }

    public void addToAttributes(Attribute obj) {
        addToManyTarget("attributes", obj, true);
    }

    public void removeFromAttributes(Attribute obj) {
        removeToManyTarget("attributes", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Attribute> getAttributes() {
        return (List<Attribute>)readProperty("attributes");
    }

    public void addToAttributevalues(Attributevalue obj) {
        addToManyTarget("attributevalues", obj, true);
    }

    public void removeFromAttributevalues(Attributevalue obj) {
        removeToManyTarget("attributevalues", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Attributevalue> getAttributevalues() {
        return (List<Attributevalue>)readProperty("attributevalues");
    }

    public void addToClassiclientes(Classicliente obj) {
        addToManyTarget("classiclientes", obj, true);
    }

    public void removeFromClassiclientes(Classicliente obj) {
        removeToManyTarget("classiclientes", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Classicliente> getClassiclientes() {
        return (List<Classicliente>)readProperty("classiclientes");
    }

    public void addToClassienergetiches(Classienergetiche obj) {
        addToManyTarget("classienergetiches", obj, true);
    }

    public void removeFromClassienergetiches(Classienergetiche obj) {
        removeToManyTarget("classienergetiches", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Classienergetiche> getClassienergetiches() {
        return (List<Classienergetiche>)readProperty("classienergetiches");
    }

    public void addToColloquiagentis(Colloquiagenti obj) {
        addToManyTarget("colloquiagentis", obj, true);
    }

    public void removeFromColloquiagentis(Colloquiagenti obj) {
        removeToManyTarget("colloquiagentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Colloquiagenti> getColloquiagentis() {
        return (List<Colloquiagenti>)readProperty("colloquiagentis");
    }

    public void addToColloquiagentis1(Colloquiagenti obj) {
        addToManyTarget("colloquiagentis1", obj, true);
    }

    public void removeFromColloquiagentis1(Colloquiagenti obj) {
        removeToManyTarget("colloquiagentis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Colloquiagenti> getColloquiagentis1() {
        return (List<Colloquiagenti>)readProperty("colloquiagentis1");
    }

    public void addToColloquianagrafiches(Colloquianagrafiche obj) {
        addToManyTarget("colloquianagrafiches", obj, true);
    }

    public void removeFromColloquianagrafiches(Colloquianagrafiche obj) {
        removeToManyTarget("colloquianagrafiches", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Colloquianagrafiche> getColloquianagrafiches() {
        return (List<Colloquianagrafiche>)readProperty("colloquianagrafiches");
    }

    public void addToColloquicriteriricercas(Colloquicriteriricerca obj) {
        addToManyTarget("colloquicriteriricercas", obj, true);
    }

    public void removeFromColloquicriteriricercas(Colloquicriteriricerca obj) {
        removeToManyTarget("colloquicriteriricercas", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Colloquicriteriricerca> getColloquicriteriricercas() {
        return (List<Colloquicriteriricerca>)readProperty("colloquicriteriricercas");
    }

    public void addToColloquis(Colloqui obj) {
        addToManyTarget("colloquis", obj, true);
    }

    public void removeFromColloquis(Colloqui obj) {
        removeToManyTarget("colloquis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Colloqui> getColloquis() {
        return (List<Colloqui>)readProperty("colloquis");
    }

    public void addToColloquis1(Colloqui obj) {
        addToManyTarget("colloquis1", obj, true);
    }

    public void removeFromColloquis1(Colloqui obj) {
        removeToManyTarget("colloquis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Colloqui> getColloquis1() {
        return (List<Colloqui>)readProperty("colloquis1");
    }

    public void addToContattis(Contatti obj) {
        addToManyTarget("contattis", obj, true);
    }

    public void removeFromContattis(Contatti obj) {
        removeToManyTarget("contattis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Contatti> getContattis() {
        return (List<Contatti>)readProperty("contattis");
    }

    public void addToContattis1(Contatti obj) {
        addToManyTarget("contattis1", obj, true);
    }

    public void removeFromContattis1(Contatti obj) {
        removeToManyTarget("contattis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Contatti> getContattis1() {
        return (List<Contatti>)readProperty("contattis1");
    }

    public void addToDaticatastalis(Daticatastali obj) {
        addToManyTarget("daticatastalis", obj, true);
    }

    public void removeFromDaticatastalis(Daticatastali obj) {
        removeToManyTarget("daticatastalis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Daticatastali> getDaticatastalis() {
        return (List<Daticatastali>)readProperty("daticatastalis");
    }

    public void addToEntities(Entity obj) {
        addToManyTarget("entities", obj, true);
    }

    public void removeFromEntities(Entity obj) {
        removeToManyTarget("entities", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Entity> getEntities() {
        return (List<Entity>)readProperty("entities");
    }

    public void addToGcalendars(Gcalendar obj) {
        addToManyTarget("gcalendars", obj, true);
    }

    public void removeFromGcalendars(Gcalendar obj) {
        removeToManyTarget("gcalendars", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Gcalendar> getGcalendars() {
        return (List<Gcalendar>)readProperty("gcalendars");
    }

    public void addToGdatas(Gdata obj) {
        addToManyTarget("gdatas", obj, true);
    }

    public void removeFromGdatas(Gdata obj) {
        removeToManyTarget("gdatas", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Gdata> getGdatas() {
        return (List<Gdata>)readProperty("gdatas");
    }

    public void addToImmaginis(Immagini obj) {
        addToManyTarget("immaginis", obj, true);
    }

    public void removeFromImmaginis(Immagini obj) {
        removeToManyTarget("immaginis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Immagini> getImmaginis() {
        return (List<Immagini>)readProperty("immaginis");
    }

    public void addToImmobilis(Immobili obj) {
        addToManyTarget("immobilis", obj, true);
    }

    public void removeFromImmobilis(Immobili obj) {
        removeToManyTarget("immobilis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Immobili> getImmobilis() {
        return (List<Immobili>)readProperty("immobilis");
    }

    public void addToImmobilis1(Immobili obj) {
        addToManyTarget("immobilis1", obj, true);
    }

    public void removeFromImmobilis1(Immobili obj) {
        removeToManyTarget("immobilis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Immobili> getImmobilis1() {
        return (List<Immobili>)readProperty("immobilis1");
    }

    public void addToPermessis(Permessi obj) {
        addToManyTarget("permessis", obj, true);
    }

    public void removeFromPermessis(Permessi obj) {
        removeToManyTarget("permessis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Permessi> getPermessis() {
        return (List<Permessi>)readProperty("permessis");
    }

    public void addToPermessis1(Permessi obj) {
        addToManyTarget("permessis1", obj, true);
    }

    public void removeFromPermessis1(Permessi obj) {
        removeToManyTarget("permessis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Permessi> getPermessis1() {
        return (List<Permessi>)readProperty("permessis1");
    }

    public void addToPermessiuis(Permessiui obj) {
        addToManyTarget("permessiuis", obj, true);
    }

    public void removeFromPermessiuis(Permessiui obj) {
        removeToManyTarget("permessiuis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Permessiui> getPermessiuis() {
        return (List<Permessiui>)readProperty("permessiuis");
    }

    public void addToPermessiuis1(Permessiui obj) {
        addToManyTarget("permessiuis1", obj, true);
    }

    public void removeFromPermessiuis1(Permessiui obj) {
        removeToManyTarget("permessiuis1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Permessiui> getPermessiuis1() {
        return (List<Permessiui>)readProperty("permessiuis1");
    }

    public void addToPromemorias(Promemoria obj) {
        addToManyTarget("promemorias", obj, true);
    }

    public void removeFromPromemorias(Promemoria obj) {
        removeToManyTarget("promemorias", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Promemoria> getPromemorias() {
        return (List<Promemoria>)readProperty("promemorias");
    }

    public void addToPromemorias1(Promemoria obj) {
        addToManyTarget("promemorias1", obj, true);
    }

    public void removeFromPromemorias1(Promemoria obj) {
        removeToManyTarget("promemorias1", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Promemoria> getPromemorias1() {
        return (List<Promemoria>)readProperty("promemorias1");
    }

    public void addToReportmarkerss(Reportmarkers obj) {
        addToManyTarget("reportmarkerss", obj, true);
    }

    public void removeFromReportmarkerss(Reportmarkers obj) {
        removeToManyTarget("reportmarkerss", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Reportmarkers> getReportmarkerss() {
        return (List<Reportmarkers>)readProperty("reportmarkerss");
    }

    public void addToReports(Report obj) {
        addToManyTarget("reports", obj, true);
    }

    public void removeFromReports(Report obj) {
        removeToManyTarget("reports", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Report> getReports() {
        return (List<Report>)readProperty("reports");
    }

    public void addToRicerches(Ricerche obj) {
        addToManyTarget("ricerches", obj, true);
    }

    public void removeFromRicerches(Ricerche obj) {
        removeToManyTarget("ricerches", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Ricerche> getRicerches() {
        return (List<Ricerche>)readProperty("ricerches");
    }

    public void addToRiscaldamentis(Riscaldamenti obj) {
        addToManyTarget("riscaldamentis", obj, true);
    }

    public void removeFromRiscaldamentis(Riscaldamenti obj) {
        removeToManyTarget("riscaldamentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Riscaldamenti> getRiscaldamentis() {
        return (List<Riscaldamenti>)readProperty("riscaldamentis");
    }

    public void addToStanzeimmobilis(Stanzeimmobili obj) {
        addToManyTarget("stanzeimmobilis", obj, true);
    }

    public void removeFromStanzeimmobilis(Stanzeimmobili obj) {
        removeToManyTarget("stanzeimmobilis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Stanzeimmobili> getStanzeimmobilis() {
        return (List<Stanzeimmobili>)readProperty("stanzeimmobilis");
    }

    public void addToStatoconservativoes(Statoconservativo obj) {
        addToManyTarget("statoconservativoes", obj, true);
    }

    public void removeFromStatoconservativoes(Statoconservativo obj) {
        removeToManyTarget("statoconservativoes", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Statoconservativo> getStatoconservativoes() {
        return (List<Statoconservativo>)readProperty("statoconservativoes");
    }

    public void addToTipiappuntamentis(Tipiappuntamenti obj) {
        addToManyTarget("tipiappuntamentis", obj, true);
    }

    public void removeFromTipiappuntamentis(Tipiappuntamenti obj) {
        removeToManyTarget("tipiappuntamentis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Tipiappuntamenti> getTipiappuntamentis() {
        return (List<Tipiappuntamenti>)readProperty("tipiappuntamentis");
    }

    public void addToTipologiastanzes(Tipologiastanze obj) {
        addToManyTarget("tipologiastanzes", obj, true);
    }

    public void removeFromTipologiastanzes(Tipologiastanze obj) {
        removeToManyTarget("tipologiastanzes", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Tipologiastanze> getTipologiastanzes() {
        return (List<Tipologiastanze>)readProperty("tipologiastanzes");
    }

    public void addToTipologiecolloquis(Tipologiecolloqui obj) {
        addToManyTarget("tipologiecolloquis", obj, true);
    }

    public void removeFromTipologiecolloquis(Tipologiecolloqui obj) {
        removeToManyTarget("tipologiecolloquis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Tipologiecolloqui> getTipologiecolloquis() {
        return (List<Tipologiecolloqui>)readProperty("tipologiecolloquis");
    }

    public void addToTipologiecontattis(Tipologiecontatti obj) {
        addToManyTarget("tipologiecontattis", obj, true);
    }

    public void removeFromTipologiecontattis(Tipologiecontatti obj) {
        removeToManyTarget("tipologiecontattis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Tipologiecontatti> getTipologiecontattis() {
        return (List<Tipologiecontatti>)readProperty("tipologiecontattis");
    }

    public void addToTipologieimmobilis(Tipologieimmobili obj) {
        addToManyTarget("tipologieimmobilis", obj, true);
    }

    public void removeFromTipologieimmobilis(Tipologieimmobili obj) {
        removeToManyTarget("tipologieimmobilis", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Tipologieimmobili> getTipologieimmobilis() {
        return (List<Tipologieimmobili>)readProperty("tipologieimmobilis");
    }

    public void addToWinkgcalendars(Winkgcalendar obj) {
        addToManyTarget("winkgcalendars", obj, true);
    }

    public void removeFromWinkgcalendars(Winkgcalendar obj) {
        removeToManyTarget("winkgcalendars", obj, true);
    }

    @SuppressWarnings("unchecked")
    public List<Winkgcalendar> getWinkgcalendars() {
        return (List<Winkgcalendar>)readProperty("winkgcalendars");
    }

    @Override
    public Object readPropertyDirectly(String propName) {
        if(propName == null) {
            throw new IllegalArgumentException();
        }

        switch(propName) {
            case "cap":
                return this.cap;
            case "citta":
                return this.citta;
            case "cognome":
                return this.cognome;
            case "dateupdate":
                return this.dateupdate;
            case "indirizzo":
                return this.indirizzo;
            case "isadmin":
                return this.isadmin;
            case "nome":
                return this.nome;
            case "password":
                return this.password;
            case "provincia":
                return this.provincia;
            case "username":
                return this.username;
            case "abbinamentis":
                return this.abbinamentis;
            case "affittiallegatis":
                return this.affittiallegatis;
            case "affittianagrafiches":
                return this.affittianagrafiches;
            case "affittirates":
                return this.affittirates;
            case "affittis":
                return this.affittis;
            case "affittis1":
                return this.affittis1;
            case "affittispeses":
                return this.affittispeses;
            case "agenti":
                return this.agenti;
            case "agentiappuntamentis":
                return this.agentiappuntamentis;
            case "agentiappuntamentis1":
                return this.agentiappuntamentis1;
            case "agentis":
                return this.agentis;
            case "allegaticolloquios":
                return this.allegaticolloquios;
            case "allegatiimmobilis":
                return this.allegatiimmobilis;
            case "anagraficheappuntamentis":
                return this.anagraficheappuntamentis;
            case "anagrafiches":
                return this.anagrafiches;
            case "anagrafiches1":
                return this.anagrafiches1;
            case "appuntamentis":
                return this.appuntamentis;
            case "attributes":
                return this.attributes;
            case "attributevalues":
                return this.attributevalues;
            case "classiclientes":
                return this.classiclientes;
            case "classienergetiches":
                return this.classienergetiches;
            case "colloquiagentis":
                return this.colloquiagentis;
            case "colloquiagentis1":
                return this.colloquiagentis1;
            case "colloquianagrafiches":
                return this.colloquianagrafiches;
            case "colloquicriteriricercas":
                return this.colloquicriteriricercas;
            case "colloquis":
                return this.colloquis;
            case "colloquis1":
                return this.colloquis1;
            case "contattis":
                return this.contattis;
            case "contattis1":
                return this.contattis1;
            case "daticatastalis":
                return this.daticatastalis;
            case "entities":
                return this.entities;
            case "gcalendars":
                return this.gcalendars;
            case "gdatas":
                return this.gdatas;
            case "immaginis":
                return this.immaginis;
            case "immobilis":
                return this.immobilis;
            case "immobilis1":
                return this.immobilis1;
            case "permessis":
                return this.permessis;
            case "permessis1":
                return this.permessis1;
            case "permessiuis":
                return this.permessiuis;
            case "permessiuis1":
                return this.permessiuis1;
            case "promemorias":
                return this.promemorias;
            case "promemorias1":
                return this.promemorias1;
            case "reportmarkerss":
                return this.reportmarkerss;
            case "reports":
                return this.reports;
            case "ricerches":
                return this.ricerches;
            case "riscaldamentis":
                return this.riscaldamentis;
            case "stanzeimmobilis":
                return this.stanzeimmobilis;
            case "statoconservativoes":
                return this.statoconservativoes;
            case "tipiappuntamentis":
                return this.tipiappuntamentis;
            case "tipologiastanzes":
                return this.tipologiastanzes;
            case "tipologiecolloquis":
                return this.tipologiecolloquis;
            case "tipologiecontattis":
                return this.tipologiecontattis;
            case "tipologieimmobilis":
                return this.tipologieimmobilis;
            case "winkgcalendars":
                return this.winkgcalendars;
            default:
                return super.readPropertyDirectly(propName);
        }
    }

    @Override
    public void writePropertyDirectly(String propName, Object val) {
        if(propName == null) {
            throw new IllegalArgumentException();
        }

        switch (propName) {
            case "cap":
                this.cap = (String)val;
                break;
            case "citta":
                this.citta = (String)val;
                break;
            case "cognome":
                this.cognome = (String)val;
                break;
            case "dateupdate":
                this.dateupdate = (LocalDateTime)val;
                break;
            case "indirizzo":
                this.indirizzo = (String)val;
                break;
            case "isadmin":
                this.isadmin = (Boolean)val;
                break;
            case "nome":
                this.nome = (String)val;
                break;
            case "password":
                this.password = (String)val;
                break;
            case "provincia":
                this.provincia = (String)val;
                break;
            case "username":
                this.username = (String)val;
                break;
            case "abbinamentis":
                this.abbinamentis = val;
                break;
            case "affittiallegatis":
                this.affittiallegatis = val;
                break;
            case "affittianagrafiches":
                this.affittianagrafiches = val;
                break;
            case "affittirates":
                this.affittirates = val;
                break;
            case "affittis":
                this.affittis = val;
                break;
            case "affittis1":
                this.affittis1 = val;
                break;
            case "affittispeses":
                this.affittispeses = val;
                break;
            case "agenti":
                this.agenti = val;
                break;
            case "agentiappuntamentis":
                this.agentiappuntamentis = val;
                break;
            case "agentiappuntamentis1":
                this.agentiappuntamentis1 = val;
                break;
            case "agentis":
                this.agentis = val;
                break;
            case "allegaticolloquios":
                this.allegaticolloquios = val;
                break;
            case "allegatiimmobilis":
                this.allegatiimmobilis = val;
                break;
            case "anagraficheappuntamentis":
                this.anagraficheappuntamentis = val;
                break;
            case "anagrafiches":
                this.anagrafiches = val;
                break;
            case "anagrafiches1":
                this.anagrafiches1 = val;
                break;
            case "appuntamentis":
                this.appuntamentis = val;
                break;
            case "attributes":
                this.attributes = val;
                break;
            case "attributevalues":
                this.attributevalues = val;
                break;
            case "classiclientes":
                this.classiclientes = val;
                break;
            case "classienergetiches":
                this.classienergetiches = val;
                break;
            case "colloquiagentis":
                this.colloquiagentis = val;
                break;
            case "colloquiagentis1":
                this.colloquiagentis1 = val;
                break;
            case "colloquianagrafiches":
                this.colloquianagrafiches = val;
                break;
            case "colloquicriteriricercas":
                this.colloquicriteriricercas = val;
                break;
            case "colloquis":
                this.colloquis = val;
                break;
            case "colloquis1":
                this.colloquis1 = val;
                break;
            case "contattis":
                this.contattis = val;
                break;
            case "contattis1":
                this.contattis1 = val;
                break;
            case "daticatastalis":
                this.daticatastalis = val;
                break;
            case "entities":
                this.entities = val;
                break;
            case "gcalendars":
                this.gcalendars = val;
                break;
            case "gdatas":
                this.gdatas = val;
                break;
            case "immaginis":
                this.immaginis = val;
                break;
            case "immobilis":
                this.immobilis = val;
                break;
            case "immobilis1":
                this.immobilis1 = val;
                break;
            case "permessis":
                this.permessis = val;
                break;
            case "permessis1":
                this.permessis1 = val;
                break;
            case "permessiuis":
                this.permessiuis = val;
                break;
            case "permessiuis1":
                this.permessiuis1 = val;
                break;
            case "promemorias":
                this.promemorias = val;
                break;
            case "promemorias1":
                this.promemorias1 = val;
                break;
            case "reportmarkerss":
                this.reportmarkerss = val;
                break;
            case "reports":
                this.reports = val;
                break;
            case "ricerches":
                this.ricerches = val;
                break;
            case "riscaldamentis":
                this.riscaldamentis = val;
                break;
            case "stanzeimmobilis":
                this.stanzeimmobilis = val;
                break;
            case "statoconservativoes":
                this.statoconservativoes = val;
                break;
            case "tipiappuntamentis":
                this.tipiappuntamentis = val;
                break;
            case "tipologiastanzes":
                this.tipologiastanzes = val;
                break;
            case "tipologiecolloquis":
                this.tipologiecolloquis = val;
                break;
            case "tipologiecontattis":
                this.tipologiecontattis = val;
                break;
            case "tipologieimmobilis":
                this.tipologieimmobilis = val;
                break;
            case "winkgcalendars":
                this.winkgcalendars = val;
                break;
            default:
                super.writePropertyDirectly(propName, val);
        }
    }

    private void writeObject(ObjectOutputStream out) throws IOException {
        writeSerialized(out);
    }

    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
        readSerialized(in);
    }

    @Override
    protected void writeState(ObjectOutputStream out) throws IOException {
        super.writeState(out);
        out.writeObject(this.cap);
        out.writeObject(this.citta);
        out.writeObject(this.cognome);
        out.writeObject(this.dateupdate);
        out.writeObject(this.indirizzo);
        out.writeObject(this.isadmin);
        out.writeObject(this.nome);
        out.writeObject(this.password);
        out.writeObject(this.provincia);
        out.writeObject(this.username);
        out.writeObject(this.abbinamentis);
        out.writeObject(this.affittiallegatis);
        out.writeObject(this.affittianagrafiches);
        out.writeObject(this.affittirates);
        out.writeObject(this.affittis);
        out.writeObject(this.affittis1);
        out.writeObject(this.affittispeses);
        out.writeObject(this.agenti);
        out.writeObject(this.agentiappuntamentis);
        out.writeObject(this.agentiappuntamentis1);
        out.writeObject(this.agentis);
        out.writeObject(this.allegaticolloquios);
        out.writeObject(this.allegatiimmobilis);
        out.writeObject(this.anagraficheappuntamentis);
        out.writeObject(this.anagrafiches);
        out.writeObject(this.anagrafiches1);
        out.writeObject(this.appuntamentis);
        out.writeObject(this.attributes);
        out.writeObject(this.attributevalues);
        out.writeObject(this.classiclientes);
        out.writeObject(this.classienergetiches);
        out.writeObject(this.colloquiagentis);
        out.writeObject(this.colloquiagentis1);
        out.writeObject(this.colloquianagrafiches);
        out.writeObject(this.colloquicriteriricercas);
        out.writeObject(this.colloquis);
        out.writeObject(this.colloquis1);
        out.writeObject(this.contattis);
        out.writeObject(this.contattis1);
        out.writeObject(this.daticatastalis);
        out.writeObject(this.entities);
        out.writeObject(this.gcalendars);
        out.writeObject(this.gdatas);
        out.writeObject(this.immaginis);
        out.writeObject(this.immobilis);
        out.writeObject(this.immobilis1);
        out.writeObject(this.permessis);
        out.writeObject(this.permessis1);
        out.writeObject(this.permessiuis);
        out.writeObject(this.permessiuis1);
        out.writeObject(this.promemorias);
        out.writeObject(this.promemorias1);
        out.writeObject(this.reportmarkerss);
        out.writeObject(this.reports);
        out.writeObject(this.ricerches);
        out.writeObject(this.riscaldamentis);
        out.writeObject(this.stanzeimmobilis);
        out.writeObject(this.statoconservativoes);
        out.writeObject(this.tipiappuntamentis);
        out.writeObject(this.tipologiastanzes);
        out.writeObject(this.tipologiecolloquis);
        out.writeObject(this.tipologiecontattis);
        out.writeObject(this.tipologieimmobilis);
        out.writeObject(this.winkgcalendars);
    }

    @Override
    protected void readState(ObjectInputStream in) throws IOException, ClassNotFoundException {
        super.readState(in);
        this.cap = (String)in.readObject();
        this.citta = (String)in.readObject();
        this.cognome = (String)in.readObject();
        this.dateupdate = (LocalDateTime)in.readObject();
        this.indirizzo = (String)in.readObject();
        this.isadmin = (Boolean)in.readObject();
        this.nome = (String)in.readObject();
        this.password = (String)in.readObject();
        this.provincia = (String)in.readObject();
        this.username = (String)in.readObject();
        this.abbinamentis = in.readObject();
        this.affittiallegatis = in.readObject();
        this.affittianagrafiches = in.readObject();
        this.affittirates = in.readObject();
        this.affittis = in.readObject();
        this.affittis1 = in.readObject();
        this.affittispeses = in.readObject();
        this.agenti = in.readObject();
        this.agentiappuntamentis = in.readObject();
        this.agentiappuntamentis1 = in.readObject();
        this.agentis = in.readObject();
        this.allegaticolloquios = in.readObject();
        this.allegatiimmobilis = in.readObject();
        this.anagraficheappuntamentis = in.readObject();
        this.anagrafiches = in.readObject();
        this.anagrafiches1 = in.readObject();
        this.appuntamentis = in.readObject();
        this.attributes = in.readObject();
        this.attributevalues = in.readObject();
        this.classiclientes = in.readObject();
        this.classienergetiches = in.readObject();
        this.colloquiagentis = in.readObject();
        this.colloquiagentis1 = in.readObject();
        this.colloquianagrafiches = in.readObject();
        this.colloquicriteriricercas = in.readObject();
        this.colloquis = in.readObject();
        this.colloquis1 = in.readObject();
        this.contattis = in.readObject();
        this.contattis1 = in.readObject();
        this.daticatastalis = in.readObject();
        this.entities = in.readObject();
        this.gcalendars = in.readObject();
        this.gdatas = in.readObject();
        this.immaginis = in.readObject();
        this.immobilis = in.readObject();
        this.immobilis1 = in.readObject();
        this.permessis = in.readObject();
        this.permessis1 = in.readObject();
        this.permessiuis = in.readObject();
        this.permessiuis1 = in.readObject();
        this.promemorias = in.readObject();
        this.promemorias1 = in.readObject();
        this.reportmarkerss = in.readObject();
        this.reports = in.readObject();
        this.ricerches = in.readObject();
        this.riscaldamentis = in.readObject();
        this.stanzeimmobilis = in.readObject();
        this.statoconservativoes = in.readObject();
        this.tipiappuntamentis = in.readObject();
        this.tipologiastanzes = in.readObject();
        this.tipologiecolloquis = in.readObject();
        this.tipologiecontattis = in.readObject();
        this.tipologieimmobilis = in.readObject();
        this.winkgcalendars = in.readObject();
    }

}
